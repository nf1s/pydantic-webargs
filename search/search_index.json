{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started A library for parsing and validating http requests for Flask web framework using pydantic library Full code on github Requirements python >= 3.6 How to install pip install pydantic-webargs Dependencies flask pydantic How to use from flask import Flask from pydantic import BaseModel from pydantic_webargs import webargs app = Flask ( __name__ ) class QueryModel ( BaseModel ): name : str class BodyModel ( BaseModel ): age : int @app . route ( \"/post-request\" , methods = [ \"POST\" ]) @webargs ( query = QueryModel , body = BodyModel ) def example_post_endpoint ( ** kwargs ): print ( kwargs ) response = kwargs return response if __name__ == \"__main__\" : app . run ( host = \"0.0.0.0\" , port = 8000 )","title":"Getting Started"},{"location":"#getting-started","text":"A library for parsing and validating http requests for Flask web framework using pydantic library Full code on github","title":"Getting Started"},{"location":"#requirements","text":"python >= 3.6","title":"Requirements"},{"location":"#how-to-install","text":"pip install pydantic-webargs","title":"How to install"},{"location":"#dependencies","text":"flask pydantic","title":"Dependencies"},{"location":"#how-to-use","text":"from flask import Flask from pydantic import BaseModel from pydantic_webargs import webargs app = Flask ( __name__ ) class QueryModel ( BaseModel ): name : str class BodyModel ( BaseModel ): age : int @app . route ( \"/post-request\" , methods = [ \"POST\" ]) @webargs ( query = QueryModel , body = BodyModel ) def example_post_endpoint ( ** kwargs ): print ( kwargs ) response = kwargs return response if __name__ == \"__main__\" : app . run ( host = \"0.0.0.0\" , port = 8000 )","title":"How to use"},{"location":"examples/","text":"Examples Example GET Endpoint from flask import Flask from pydantic import BaseModel from pydantic_webargs import webargs app = Flask ( __name__ ) class QueryModel ( BaseModel ): name : str @app . route ( \"/get-request\" , methods = [ \"GET\" ]) @webargs ( query = QueryModel ) def example_get_endpoint ( ** kwargs ): response = kwargs return response if __name__ == \"__main__\" : app . run ( host = \"0.0.0.0\" , port = 8000 ) Example POST Endpoint from flask import Flask from pydantic import BaseModel from pydantic_webargs import webargs app = Flask ( __name__ ) class QueryModel ( BaseModel ): name : str class BodyModel ( BaseModel ): age : int @app . route ( \"/post-request\" , methods = [ \"POST\" ]) @webargs ( query = QueryModel , body = BodyModel ) def example_post_endpoint ( ** kwargs ): print ( kwargs ) response = kwargs return response if __name__ == \"__main__\" : app . run ( host = \"0.0.0.0\" , port = 8000 )","title":"Examples"},{"location":"examples/#examples","text":"","title":"Examples"},{"location":"examples/#example-get-endpoint","text":"from flask import Flask from pydantic import BaseModel from pydantic_webargs import webargs app = Flask ( __name__ ) class QueryModel ( BaseModel ): name : str @app . route ( \"/get-request\" , methods = [ \"GET\" ]) @webargs ( query = QueryModel ) def example_get_endpoint ( ** kwargs ): response = kwargs return response if __name__ == \"__main__\" : app . run ( host = \"0.0.0.0\" , port = 8000 )","title":"Example GET Endpoint"},{"location":"examples/#example-post-endpoint","text":"from flask import Flask from pydantic import BaseModel from pydantic_webargs import webargs app = Flask ( __name__ ) class QueryModel ( BaseModel ): name : str class BodyModel ( BaseModel ): age : int @app . route ( \"/post-request\" , methods = [ \"POST\" ]) @webargs ( query = QueryModel , body = BodyModel ) def example_post_endpoint ( ** kwargs ): print ( kwargs ) response = kwargs return response if __name__ == \"__main__\" : app . run ( host = \"0.0.0.0\" , port = 8000 )","title":"Example POST Endpoint"},{"location":"install/","text":"Using Pip pip install pydantic-webargs","title":"Install"},{"location":"install/#using-pip","text":"pip install pydantic-webargs","title":"Using Pip"}]}